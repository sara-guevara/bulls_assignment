ylab("Expected points per player")
gg_play_sal_vs_Expt_PTS
starting_5 <- player_choices %>%
group_by (player_name) %>%
filter(player_name == "Johnathan Motley" |
player_name == "Malachi Richardson" |
player_name == "James Nunnally"|
player_name == "Edmond Sumner" |
player_name == "Ekpe Udoh")
starting_5 <- player_choices %>%
group_by (player_name) %>%
filter(player_name == "Johnathan Motley" |
player_name == "Malachi Richardson" |
player_name == "James Nunnally"|
player_name == "Edmond Sumner" |
player_name == "Ekpe Udoh")
starting_5 <- player_choices %>%
group_by (player_name) %>%
filter(player_name == "Johnathan Motley" |
player_name == "Malachi Richardson" |
player_name == "James Nunnally"|
player_name == "Edmond Sumner" |
player_name == "Ekpe Udoh")
starting_5
ggplot(df_team, aes(x =AST_per_game , y = WINp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(broom)
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
str(stat_tm1)
str(stat_tm2)
head(stat_tm1)
tail(stat_tm1)
head(stat_tm2)
tail(stat_tm2)
df_team <- left_join(x = stat_tm2, y = stat_tm1 [-c(1,3, 23:25)],
by = "Team")
df_team <- df_team %>%
rename( x3P = '3P', x3PA = '3PA', x3Pp = '3P%', x2P = '2P', x2PA = '2PA', x2Pp = '2P%', FGp = 'FG%', FTp = 'FT%', x3PAr = "3PAr", TSp = "TS%", eFGp = "eFG%", TOVp = "TOV%", ORBp = "ORB%", FT_per_FGA = "FT/FGA", DRBp = "DRB%")
df_team <- df_team %>%
mutate (PTS_per_game = PTS / G,
WINp = W/G,
AST_per_game = AST / G,
FG_per_game = FGA / G,
x3P_per_game = x3P / G,
x2P_per_game = x2PA / G,
FT_per_game = FTA / G,
STL_per_game = STL / G,
BLK_per_game = BLK / G,
TOV_per_game = TOV / G,
ORB_per_game = ORB / G,
DRB_per_game = DRB / G,
TRB_per_game = TRB / G,
PF_per_game = PF / G)
df_team <- df_team %>%
mutate (PTS_pmp = PTS / MP ,
AST_pmp = AST / MP,
FG_pmp = FGA / MP,
x3P_pmp = x3P / MP ,
x2P_pmp = x2P / MP ,
FT_pmp = FTA / MP,
STL_pmp = STL / MP ,
BLK_pmp = BLK / MP,
TOV_pmp = TOV / MP,
ORB_pmp = ORB / MP,
DRB_pmp = DRB / MP,
TRB_pmp = TRB / MP,
PF_pmp = PF / MP)
str(df_team)
head(df_team)
tail(df_team)
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
fit_win = lm(WINp ~ PTS_per_game, data = df_team)
summary(fit_win)
tidy(fit_win, conf.int = TRUE)
ggplot(df_team, aes(x =AST_per_game , y = WINp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm")
ggplot(df_team, aes(AST_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm")
ggplot(df_team, aes(FG_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002)
ggplot(df_team, aes(x3P_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.005, nudge_x = 0.0005)
ggplot(df_team, aes(x = FG_per_game, y = PTS_per_game)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.5, nudge_x = 0.5)
ggplot(df_team, aes(x = x3P_per_game, y = PTS_per_game)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm")
ggplot(df_team, aes(STL_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.005, nudge_x = 0.001)
ggplot(df_team, aes(BLK_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.003, nudge_x = 0.0005)
ggplot(df_team, aes(BLK_per_game, y = PTS_per_game)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.5, nudge_x = 0.25)
ggplot(df_team, aes(FT_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002, size = 3)
ggplot(df_team, aes(FT_per_game, y = PTS_per_game)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.5, nudge_x = 0.25, size = 3)
ggplot(df_team, aes(ORB_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002, size = 3)
ggplot(df_team, aes(DRB_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002, size = 3)
```{r points vs Defensive Rebounds per minute played}
ggplot(df_team, aes(DRB_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002, size = 3)
ggplot(df_team, aes(DRB_per_game, y = PTS_per_game)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002, size = 3)
ggplot(df_team, aes(TRB_pmp, y = PTS_pmp)) +
geom_point(alpha = 0.5, colour = "purple") +
geom_smooth(method = "lm") +
geom_text(aes(label = Team), nudge_y = 0.002, nudge_x = 0.002, size = 3)
pairs(formula = ~ PTS_pmp + AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp + TRB_pmp, data = df_team)
tidy(lm_teams_pg, conf.int = TRUE)
lm_teams_pg <- lm(PTS_per_game ~ AST_per_game + FG_per_game + x3P_per_game + x2P_per_game + FT_per_game + STL_per_game + BLK_per_game + TOV_per_game + DRB_per_game + ORB_per_game + TRB_per_game, data = df_team)
tidy(lm_teams_pg, conf.int = TRUE)
tidy(lm_teams_wp, conf.int = TRUE)
lm_teams_wp <- lm(WINp ~ AST_per_game + x3P_per_game + x2P_per_game + FG_per_game + FT_per_game, data = df_team)
tidy(lm_teams_wp, conf.int = TRUE)
lm_teams_wp <- lm(WINp ~ AST_per_game + x3P_per_game + x2P_per_game + FT_per_game, data = df_team)
tidy(lm_teams_wp, conf.int = TRUE)
lm_teams_pmp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp + TRB_pmp, data = df_team)
tidy(lm_teams_pmp, conf.int = TRUE)
summary(lm_teams_pmp)
fit_mp <- lm(PTS_pmp ~ x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
tidy(fit_mp, conf.int = TRUE)
summary(fit_mp)
tidy(lm_teams_pg, conf.int = TRUE)
fit_pg <- lm(PTS_per_game ~ AST_per_game + x3P_per_game + x2P_per_game + FT_per_game, data = df_team)
tidy(fit_pg, conf.int = TRUE)
summary(fit_pg)
hats_labels_mp <- if_else(hats_mp >= 0.2, paste(points), "")
ggplot(data = NULL, aes(x = points_mp, y = hats_mp)) +
geom_point() +
geom_text(aes(label = hats_labels_mp), nudge_y = 0.02)
outliers <- c(5, 11, 16, 26 )
filtered_df <- df_team %>%
filter(!Rk %in% outliers)
fit2_mp <- lm(PTS_pmp ~ x3P_pmp + x2P_pmp + FT_pmp, data = filtered_df)
tidy(fit2_mp, conf.int = TRUE)
ggplot(data = NULL, aes(sample = res_mp)) +
stat_qq() + stat_qq_line() +
ylim(c(-0.01, 0.01))
ggplot(data = NULL, aes(sample = res)) +
stat_qq() + stat_qq_line()
ggplot(data = NULL, aes(sample = res)) +
stat_qq() + stat_qq_line() =
ylim(c(-0.01, 0.01))
ggplot(data = NULL, aes(sample = res)) +
stat_qq() + stat_qq_line() =
ylim(c(-0.01, 0.01))
ggplot(data = NULL, aes(sample = res)) +
stat_qq() + stat_qq_line() +
ylim(c(-0.01, 0.01))
ggplot(data = NULL, aes(sample = res_mp)) +
stat_qq() + stat_qq_line() +
ylim(c(-0.01, 0.01))
ggplot(data = NULL, aes(sample = res)) +
stat_qq() + stat_qq_line()
ggplot(data = NULL, aes(sample = res_mp)) +
stat_qq() + stat_qq_line() +
ylim(c(-0.01, 0.01))
head(predict(fit_mp))
lm_teams_pmp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp + TRB_pmp, data = df_team)
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($1,000)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player") +
labs(colour = "Position")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 100000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($100,000)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player") +
labs(colour = "Position")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($1,000,000)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player") +
labs(colour = "Position")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 100000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($100,000)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player") +
labs(colour = "Position")
gg_play_sal_vs_Expt_PTS
exp_PTS_pmp = predict(fit_mp)
coef(lm(exp_PTS_pmp ~ W, data = df_team)) # used this to find the slope and coefficient of these two variables
gg_team_model_prediction <- ggplot(df_team, aes((W/82*100), exp_PTS_pmp, label = Team)) +
geom_point(colour = "dodgerblue") +
geom_text(nudge_x = 4, nudge_y = 0.0015, cex = 2.5) +
geom_abline(linetype = "dashed", colour = "red", intercept = 0.42228755184, slope = 0.000910  )
gg_team_model_prediction <- gg_team_model_prediction +
ggtitle("Predicted scored points per team compared to wins in 2018-2019 season") +
xlab("Win percentage from 2018-2019 season") +
ylab("Predicted of scored points per team, per minuted played") +
scale_x_continuous(limits = c(18,80),
breaks = c(seq(20,80, by = 10)))
gg_team_model_prediction
exp_PTS_pmp = predict(fit_mp)
coef(lm(exp_PTS_pmp ~ W, data = df_team)) # used this to find the slope and coefficient of these two variables
gg_team_model_prediction <- ggplot(df_team, aes((W/82*100), exp_PTS_pmp, label = Team)) +
geom_point(colour = "dodgerblue") +
geom_text(nudge_x = 4, nudge_y = 0.0015, cex = 2.5) +
geom_abline(linetype = "dashed", colour = "red", intercept = 0.42228755184, slope = 0.000910  )
gg_team_model_prediction <- gg_team_model_prediction +
ggtitle("Predicted scored points per team compared to wins in 2018-2019 season") +
xlab("Win percentage from 2018-2019 season") +
ylab("Predicted of scored points per team, per minuted played") +
scale_x_continuous(limits = c(18,80),
breaks = c(seq(20,80, by = 10)))
gg_team_model_prediction
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(broom)
pay <- read_csv("data/processed/bulls_pay.csv")
df_play_sum <- read_csv("data/processed/df_play_sum.csv")
df_player <- read_csv("data/processed/df_player.csv")
df_team <-read_csv("data/processed/df_team.csv")
player <- read_csv("data/processed/player.csv")
player_choices <- read_csv("data/processed/player_choices.csv")
pos <- read_csv("data/processed/pos.csv")
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
lm_teams_pmp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp + TRB_pmp, data = df_team)
knitr::kable(tidy(lm_teams_pmp, conf.int = TRUE))
fit_mp <- lm(PTS_pmp ~   x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
summary(fit_mp)
exp_PTS_pmp = predict(fit_mp)
coef(lm(exp_PTS_pmp ~ W, data = df_team)) # used this to find the slope and coefficient of these two variables
gg_team_model_prediction <- ggplot(df_team, aes((W/82*100), exp_PTS_pmp, label = Team)) +
geom_point(colour = "dodgerblue") +
geom_text(nudge_x = 4, nudge_y = 0.0015, cex = 2.5) +
geom_abline(linetype = "dashed", colour = "red", intercept = 0.42228755184, slope = 0.000910  )
gg_team_model_prediction <- gg_team_model_prediction +
ggtitle("Predicted scored points per team compared to wins in 2018-2019 season") +
xlab("Win percentage from 2018-2019 season") +
ylab("Predicted of scored points per team, per minuted played") +
scale_x_continuous(limits = c(18,80),
breaks = c(seq(20,80, by = 10)))
gg_team_model_prediction
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 100000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($100,000)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player") +
labs(colour = "Position")
gg_play_sal_vs_Expt_PTS
starting_5 <- player_choices %>%
group_by (player_name) %>%
filter(player_name == "Johnathan Motley" |
player_name == "Malachi Richardson" |
player_name == "James Nunnally"|
player_name == "Edmond Sumner" |
player_name == "Ekpe Udoh")
knitr::kable(starting_5)
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 100000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($100,000)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 100000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary ($100,000)")
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player") +
labs(colour = "Position")
gg_play_sal_vs_Expt_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
summary(fit_mp)
knitr::kable(summary(fit_mp))
(summary(fit_mp)
summary(fit_mp)
fit_mp <- lm(PTS_pmp ~   x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
summary(fit_mp)
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(se = FALSE)
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(se = FALSE)
```{r finalising linearity plot_fig 1, echo = FALSE, eval=TRUE}
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(se = FALSE, method = lm)
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(se = FALSE, method = lm)
```{r finalising linearity plot_fig 1, echo = FALSE, eval=TRUE}
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_W_PTS <- gg_linearity_W_PTS +
geom_smooth(method = lm) +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = (PTS/82), y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black")
gg_W_PTS <- gg_linearity_W_PTS +
geom_smooth(method = lm) +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
