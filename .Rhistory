FG_pmp = FGA / MP,
x3P_pmp = x3P / MP ,
x2P_pmp = x2P / MP ,
FT_pmp = FTA / MP,
STL_pmp = STL / MP ,
BLK_pmp = BLK / MP,
TOV_pmp = TOV / MP,
ORB_pmp = ORB / MP,
DRB_pmp = DRB / MP,
TRB_pmp = TRB / MP,
PF_pmp = PF / MP)
str(df_team)
fit_mp <- lm(PTS_pmp ~   x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
tidy(fit_mp, conf.int = TRUE)
df_player <- stat_pl %>%
rename( x3P = '3P', x3PA = '3PA', x3Pp = '3P%', x2P = '2P', x2PA = '2PA', x2Pp = '2P%', FGp = 'FG%', FTp = 'FT%', eFGp = "eFG%")
fit_mp <- lm(PTS_pmp ~   x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
tidy(fit_mp, conf.int = TRUE)
df_player <- stat_pl %>%
rename( x3P = '3P', x3PA = '3PA', x3Pp = '3P%', x2P = '2P', x2PA = '2PA', x2Pp = '2P%', FGp = 'FG%', FTp = 'FT%', eFGp = "eFG%")
head(df_player)
tail(df_player)
df_play_sum <- df_player %>%
select(player_name, G, GS, MP, FG, x3P, x2P, FT, PTS) %>%
group_by(player_name) %>%
summarise(MP = sum(MP),
G = sum(G),
GS = sum(G),
FG = sum(FG),
x3P = sum(x3P),
x2P = sum(x2P),
FT = sum(FT),
PTS = sum(PTS))
head(df_play_sum)
tail(df_play_sum)
pos <- df_player %>%
filter(G > 0) %>%
group_by(player_name, Pos) %>%
select(player_name, Pos, G, GS)
table(pos$Pos)
pos <- pos %>%
filter(Pos != "C-PF", Pos != "PF-C", Pos != "PF-SF", Pos != "SF-SG", Pos != "SG-PF", Pos != "SG-SF" )
table(pos$Pos)
mp_per_game <- df_team %>%
group_by(Team) %>%
summarise(mp_per_game = MP/G/5) %>%
pull(mp_per_game) %>%
mean
df_play_sum <- df_play_sum %>%
group_by(player_name) %>%
mutate(PTS_pmp = PTS / MP,
x3P_pmp = x3P / MP,
x2P_pmp = x2P / MP,
FT_pmp = FT / MP)
player <- df_play_sum %>%
summarise(MPn = sum(MP)/mp_per_game,
x3P_pmp = sum(x3P_pmp)/ MPn,
x2P_pmp = sum(x2P_pmp)/MPn,
FT_pmp = sum(FT_pmp) / MPn,
G = sum(G)) %>%
filter(G > 20) %>%
select(-c(MPn))
player <- mutate(player, exp_PTS_ppl = predict(fit_mp, newdata = player))
player %>%
ggplot(aes(x = exp_PTS_ppl)) +
geom_histogram(binwidth = 0.01, colour = "black", fill = "blue")
player <- sal %>%
select(player_name, salary) %>%
right_join(player, by = "player_name")
pos <- pos %>%
filter(G > 0) %>%
group_by(player_name, Pos) %>%
summarise(G = sum(G)) %>%
top_n(1,abs(G))
player <- pos %>%
select(player_name, Pos) %>%
right_join(player, by = "player_name")
sum(is.na (player))
player <- player %>%
filter(!is.na(Pos)) %>%
filter(!is.na(salary))
sum(is.na (player))
player_choices <- player %>%
select(player_name, Pos, salary, exp_PTS_ppl) %>%
arrange(desc(exp_PTS_ppl), salary)
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = exp_PTS_ppl, color = Pos)) +
geom_point() +
xlab("salary (Thousands)")
gg_play_sal_vs_Expt_PTS
player_choices
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = exp_PTS_ppl, color = Pos)) +
geom_point() +
xlab("salary (Thousands)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per player per position by salary") +
ylab("Expected points per minute played")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per player per position by salary") +
ylab("Expected points per player")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = (exp_PTS_ppl *5), color = Pos)) +
geom_point() +
xlab("salary (Thousands)")
gg_play_sal_vs_Expt_PTS
```{r final graph of exp points vs salary}
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per player per position by salary") +
ylab("Expected points per player")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = (exp_PTS_ppl *48), color = Pos)) +
geom_point() +
xlab("salary (Thousands)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("salary (Thousands)")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS
ggsave("figs/Exp_points_per_player_by_salary.pdf")
gg_play_sal_vs_Expt_PTS <- player_choices %>%
ggplot(aes(x = salary / 1000, y = (exp_PTS_ppl *48*5), color = Pos)) +
geom_point() +
xlab("Salary (Thousands)")
gg_play_sal_vs_Expt_PTS
```{r final graph of exp points vs salary}
gg_play_sal_vs_Expt_PTS <- gg_play_sal_vs_Expt_PTS +
ggtitle("Expect points per game per player by salary") +
ylab("Expected points per player")
gg_play_sal_vs_Expt_PTS
gg_play_sal_vs_Expt_PTS
```{r save final player graph}
ggsave("figs/Exp_points_per_player_by_salary.pdf")
lm_teams_pmp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp + TRB_pmp, data = df_team)
knitr::kable(tidy(lm_teams_pmp, conf.int = TRUE))
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
library(tidyverse)
library(dplyr)
library(broom)
library(tidyverse)
library(dplyr)
library(broom)
# Reading in and tidying Bulls data files
```{r read_data, message=TRUE}
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
## Check struture
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
str(stat_tm2)
# Tidying data
## Binding data from two data frames
Binding variables from team 1 data and team 2 data
## renaming variables:
Making sure variables do not include a %, replace with 'p'. And added a 'x' in front of number variables. Change '/' to _per_ .
## Normalising key metrics
We want normalise the key metrics to per game
## Normalising variables per minuted played minutes played
There are 5 players playing roughly 48mins per game. Therefore there are ~240mins per game. WE want normalise these varaibles for the minutes played.
##Check structure of new data set
# Explore Data
#Points vs Wins
Points are the outcome variable that are associated with winning but we want to check this.
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
gg_linearity_W_PTS <- ggplot(df_team, aes(x = PTS/82, y = (W/82*100))) +
geom_point(alpha = 0.5, colour = "black") +
geom_smooth(method = "lm")
gg_W_PTS <- gg_linearity_W_PTS +
ggtitle("Points needed per game to increase the chance of winning") +
xlab("Points per game") +
ylab("Percentage chance of winning (%)") +
scale_x_continuous(limits = c(104,118),
breaks = c(seq(104,118, by = 2))) +
scale_y_continuous(limits = c(20,80),
breaks = c(20, 30, 40 , 50 , 60 , 70, 80)) +
geom_hline(yintercept = 50, colour = "red", linetype = "dashed")
gg_W_PTS
fit_win = lm(WINp ~ PTS_per_game, data = df_team)
summary(fit_win)
View(df_team)
df_team <- df_team %>%
mutate (PTS_per_game = PTS / G,
WINp = W/G,
AST_per_game = AST / G,
FG_per_game = FGA / G,
x3P_per_game = x3P / G,
x2P_per_game = x2PA / G,
FT_per_game = FTA / G,
STL_per_game = STL / G,
BLK_per_game = BLK / G,
TOV_per_game = TOV / G,
ORB_per_game = ORB / G,
DRB_per_game = DRB / G,
TRB_per_game = TRB / G,
PF_per_game = PF / G)
fit_win = lm(WINp ~ PTS_per_game, data = df_team)
summary(fit_win)
fit_blk = lm(WINp ~ BLK_per_game, data = df_team)
summary(fit_blk)
fit_ast = lm(WINp ~ AST_per_game, data = df_team)
summary(fit_ast)
tidy(fit_ast, conf.int = TRUE)
summary(fit_blk)
tidy(fit_blk, conf.int = TRUE)
df_team <- df_team %>%
mutate (PTS_per_game = PTS / G,
WINp = W/G,
AST_per_game = AST / G,
FG_per_game = FGA / G,
x3P_per_game = x3P / G,
x2P_per_game = x2PA / G,
FT_per_game = FTA / G,
STL_per_game = STL / G,
BLK_per_game = BLK / G,
TOV_per_game = TOV / G,
ORB_per_game = ORB / G,
DRB_per_game = DRB / G,
TRB_per_game = TRB / G,
PF_per_game = PF / G)
df_team <- df_team %>%
mutate (PTS_per_game = PTS / G,
WINp = W/G,
AST_per_game = AST / G,
FG_per_game = FGA / G,
x3P_per_game = x3P / G,
x2P_per_game = x2PA / G,
FT_per_game = FTA / G,
STL_per_game = STL / G,
BLK_per_game = BLK / G,
TOV_per_game = TOV / G,
ORB_per_game = ORB / G,
DRB_per_game = DRB / G,
TRB_per_game = TRB / G,
PF_per_game = PF / G)
## Normalising variables per minuted played minutes played
There are 5 players playing roughly 48mins per game. Therefore there are ~240mins per game. WE want normalise these varaibles for the minutes played.
```{r Normalising metrics_pmp}
df_team <- df_team %>%
mutate (PTS_pmp = PTS / MP ,
AST_pmp = AST / MP,
FG_pmp = FGA / MP,
x3P_pmp = x3P / MP ,
x2P_pmp = x2P / MP ,
FT_pmp = FTA / MP,
STL_pmp = STL / MP ,
BLK_pmp = BLK / MP,
TOV_pmp = TOV / MP,
ORB_pmp = ORB / MP,
DRB_pmp = DRB / MP,
TRB_pmp = TRB / MP,
PF_pmp = PF / MP)
lm_teams <- lm(PTS_per_game ~ AST_per_game + FG_per_game + x3P_per_game + x2P_per_game + FT_per_game + STL_per_game + BLK_per_game + TOV_per_game + DRB_per_game + ORB_per_game, data = df_team)
lm_teams <- lm(PTS_per_game ~ AST_per_game + FG_per_game + x3P_per_game + x2P_per_game + FT_per_game + STL_per_game + BLK_per_game + TOV_per_game + DRB_per_game + ORB_per_game, data = df_team)
tidy(lm_teams, conf.int = TRUE)
lm_teams <- lm(WINp ~ AST_per_game + FG_per_game + x3P_per_game + x2P_per_game + FT_per_game + STL_per_game + BLK_per_game + TOV_per_game + DRB_per_game + ORB_per_game, data = df_team)
tidy(lm_teams, conf.int = TRUE)
lm_mp <- lm(WINp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp, data = df_team)
tidy(lm_mp, conf.int = TRUE)
summary(lm_mp)
car::durbinWatsonTest(lm_mp)
car::avPlots(lm_mp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Reading in and tidying Bulls data files
library(dplyr)
library(dplyr)
library(broom)
```{r read_data, message=TRUE}
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
setwd("H:/repos/bulls_assignment")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
setwd("H:/repos/bulls_assignment/analysis.R")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
setwd("H:/repos/bulls_assignment")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Opening libraries
```{r librarys}
library(tidyverse)
library(dplyr)
library(broom)
library(tidyverse)
library(dplyr)
library(broom)
# Reading in and tidying Bulls data files
```{r read_data, message=TRUE}
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
knitr::opts_chunk$set(echo = TRUE)
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
library(tidyverse)
library(tidyverse)
library(dplyr)
library(broom)
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
sal <- read.csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
knitr::opts_chunk$set(echo = TRUE)
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
lm_mp_w <- lm(WINp ~ x3P_pmp + x2P_pmp + STL_pmp + DRB_pmp, data = df_team)
tidy(lm_mp_w, conf.int = TRUE)
lm_mp <- lm(WINp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp, data = df_team)
df_team <- left_join(x = stat_tm2, y = stat_tm1 [-c(1,3, 23:25)],
by = "Team")
df_team <- df_team %>%
rename( x3P = '3P', x3PA = '3PA', x3Pp = '3P%', x2P = '2P', x2PA = '2PA', x2Pp = '2P%', FGp = 'FG%', FTp = 'FT%', x3PAr = "3PAr", TSp = "TS%", eFGp = "eFG%", TOVp = "TOV%", ORBp = "ORB%", FT_per_FGA = "FT/FGA", DRBp = "DRB%")
df_team <- df_team %>%
mutate (PTS_per_game = PTS / G,
WINp = W/G,
AST_per_game = AST / G,
FG_per_game = FGA / G,
x3P_per_game = x3P / G,
x2P_per_game = x2PA / G,
FT_per_game = FTA / G,
STL_per_game = STL / G,
BLK_per_game = BLK / G,
TOV_per_game = TOV / G,
ORB_per_game = ORB / G,
DRB_per_game = DRB / G,
TRB_per_game = TRB / G,
PF_per_game = PF / G)
df_team <- df_team %>%
mutate (PTS_pmp = PTS / MP ,
AST_pmp = AST / MP,
FG_pmp = FGA / MP,
x3P_pmp = x3P / MP ,
x2P_pmp = x2P / MP ,
FT_pmp = FTA / MP,
STL_pmp = STL / MP ,
BLK_pmp = BLK / MP,
TOV_pmp = TOV / MP,
ORB_pmp = ORB / MP,
DRB_pmp = DRB / MP,
TRB_pmp = TRB / MP,
PF_pmp = PF / MP)
str(df_team)
lm_mp <- lm(WINp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp, data = df_team)
tidy(lm_mp, conf.int = TRUE)
lm_mp_w <- lm(WINp ~ x3P_pmp + x2P_pmp + STL_pmp + DRB_pmp, data = df_team)
tidy(lm_mp_w, conf.int = TRUE)
summary(lm_mp_w)
lm_mp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp, data = df_team)
tidy(lm_mp, conf.int = TRUE)
car::durbinWatsonTest(lm_teams)
lm_teams <- lm(WINp ~ AST_per_game + FG_per_game + x3P_per_game + x2P_per_game + FT_per_game + STL_per_game + BLK_per_game + TOV_per_game + DRB_per_game + ORB_per_game, data = df_team)
tidy(lm_teams, conf.int = TRUE)
summary(lm_teams)
lm_mp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp, data = df_team)
tidy(lm_mp, conf.int = TRUE)
summary(lm_mp)
car::durbinWatsonTest(lm_teams)
fit_mp <- lm(PTS_pmp ~   x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
tidy(fit_mp, conf.int = TRUE)
summary(fit_mp)
knitr::opts_chunk$set(echo = TRUE)
fit_mp <- lm(PTS_pmp ~   x3P_pmp + x2P_pmp + FT_pmp, data = df_team)
tidy(fit_mp, conf.int = TRUE)
summary(fit_mp)
_
```{r include W vs PTS figure}
insertImage("figs/lin_W_PTS.pdf")
insertImage("figs/lin_W_PTS.pdf")
knitr::include_graphics("figs/lin_W_PTS.pdf")
```{r include W vs PTS figure, out.width= "0.3\\linewidth", include TRUE, fig.align 'left', fig.cap= "Figure 1. Relationship between winning and scoring points in basketball", echo = FALSE }
knitr::include_graphics("figs/lin_W_PTS.pdf")
```{r, out.width= "0.3\\linewidth", include TRUE, fig.align 'left', fig.cap= "Figure 1. Relationship between winning and scoring points in basketball", echo = FALSE }
setwd("H:/repos/bulls_assignment")
knitr::include_graphics("figs/lin_W_PTS.pdf")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(broom)
tab1_FR <- df_team[c(5, 8, 11, 14, 17,18,19:23)]
knitr::kable(head(tab1_FR))
knitr::include_graphics("figs/lin_W_PTS.pdf")
knitr::include_graphics("/figs/lin_W_PTS.pdf")
knitr::include_graphics("figs/lin_W_PTS.pdf")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(broom)
sal <- read_csv("data/raw/2018-19_nba_player-salaries.csv")
stat_pl <- read_csv("data/raw/2018-19_nba_player_statistics.csv")
stat_tm1 <- read_csv("data/raw/2018-19_nba_team_statistics_1.csv")
stat_tm2 <- read_csv("data/raw/2018-19_nba_team_statistics_2.csv")
pay <- read_csv("data/raw/2019-20_nba_team-payroll.csv")
df_team <- left_join(x = stat_tm2, y = stat_tm1 [-c(1,3, 23:25)],
by = "Team")
df_team <- df_team %>%
rename( x3P = '3P', x3PA = '3PA', x3Pp = '3P%', x2P = '2P', x2PA = '2PA', x2Pp = '2P%', FGp = 'FG%', FTp = 'FT%', x3PAr = "3PAr", TSp = "TS%", eFGp = "eFG%", TOVp = "TOV%", ORBp = "ORB%", FT_per_FGA = "FT/FGA", DRBp = "DRB%")
df_team <- df_team %>%
mutate (PTS_per_game = PTS / G,
WINp = W/G,
AST_per_game = AST / G,
FG_per_game = FGA / G,
x3P_per_game = x3P / G,
x2P_per_game = x2PA / G,
FT_per_game = FTA / G,
STL_per_game = STL / G,
BLK_per_game = BLK / G,
TOV_per_game = TOV / G,
ORB_per_game = ORB / G,
DRB_per_game = DRB / G,
TRB_per_game = TRB / G,
PF_per_game = PF / G)
df_team <- df_team %>%
mutate (PTS_pmp = PTS / MP ,
AST_pmp = AST / MP,
FG_pmp = FGA / MP,
x3P_pmp = x3P / MP ,
x2P_pmp = x2P / MP ,
FT_pmp = FTA / MP,
STL_pmp = STL / MP ,
BLK_pmp = BLK / MP,
TOV_pmp = TOV / MP,
ORB_pmp = ORB / MP,
DRB_pmp = DRB / MP,
TRB_pmp = TRB / MP,
PF_pmp = PF / MP)
str(df_team)
lm_teams <- lm(WINp ~ AST_per_game + FG_per_game + x3P_per_game + x2P_per_game + FT_per_game + STL_per_game + BLK_per_game + TOV_per_game + DRB_per_game + ORB_per_game, data = df_team)
tidy(lm_teams, conf.int = TRUE)
summary(lm_teams)
lm_mp <- lm(PTS_pmp ~ AST_pmp + FG_pmp + x3P_pmp + x2P_pmp + FT_pmp + STL_pmp + BLK_pmp + TOV_pmp + DRB_pmp + ORB_pmp, data = df_team)
tidy(lm_mp, conf.int = TRUE)
summary(lm_mp)
car::durbinWatsonTest(lm_teams)
car::durbinWatsonTest(lm_mp)
car::avPlots(lm_teams)
